<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- 
	<http auto-config='true'>
		<intercept-url pattern="/**" access="ROLE_USER" />
		<http-basic />
	</http>
	-->
	
    <!-- <intercept-url pattern="/**" access="hasRole('ROLE_USER')" /> -->
<!--     <http auto-config="true" use-expressions="true">
        <intercept-url pattern="/admin/login" access="permitAll" />
        <intercept-url pattern="/accessdenied" access="permitAll" />
        <intercept-url pattern="/admin/cpanel" access="hasRole('ROLE_ADMIN')" />
        <form-login login-page="/admin/login" default-target-url="/admin/cpanel" authentication-failure-url="/admin/accessdenied" />
        <session-management invalid-session-url="/admin/login">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" expired-url="/admin/login" />
        </session-management>
        <logout logout-success-url="/admin/login" delete-cookies="JSESSIONID" invalidate-session="false"/>
    </http> -->
    
    <!-- <password-encoder hash="sha-256" />
    <password-encoder hash="md5?" />
    http://www.sha1-online.com/ -->
	<!-- <authentication-manager>
		<authentication-provider>
            <password-encoder hash="sha" />
			<user-service>
				<user name="user" password="12dea96fec20593566ab75692c9949596833adc9" authorities="ROLE_USER" />
				<user name="admin" password="d033e22ae348aeb5660fc2140aec35850c4da997" authorities="ROLE_USER, ROLE_ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager> -->
	<!-- 
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <password-encoder ref="customPasswordEncoder" />
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="SELECT UserName AS username, Password AS password, Active AS enabled FROM tblUser WHERE UserName=?" 
                authorities-by-username-query="SELECT u.UserName AS username, p.Code AS authority FROM tblUser u, tblPermission p, tblGroup g, tblGroupPermission gp WHERE u.GroupID = g.ID AND gp.GroupID = p.ID AND gp.PermissionID = p.ID AND u.UserName=?" />
        </authentication-provider>
    </authentication-manager> -->
    
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService">
            <password-encoder ref="customPasswordEncoder" />
        </authentication-provider>
    </authentication-manager>
    
    <http auto-config="false" use-expressions="true" entry-point-ref="loginUrlAuthenticationEntryPoint">
	    <custom-filter ref="customAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
        	    
        <intercept-url pattern="/admin/login" access="permitAll" />
        <intercept-url pattern="/admin/accessDenied" access="permitAll" />
        <intercept-url pattern="/admin/cpanel" access="permitAll" />
        <intercept-url pattern="/admin/j_spring_security_check" access="permitAll" />
        
        <intercept-url pattern="/admin/loginSuccess" access="isAuthenticated() and hasIpAddress('127.0.0.0/24')" />
        <intercept-url pattern="/admin/users" access="isAuthenticated() and hasIpAddress('127.0.0.0/24')" />
        
	    <logout logout-success-url="/admin/accessDenied" delete-cookies="JSESSIONID" invalidate-session="false"/>
		<port-mappings>
			<port-mapping http="8686" https="6868" />
		</port-mappings>
    </http>
        
	<beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
	    <beans:property name="loginFormUrl" value="/admin/login"/>
	</beans:bean>

	<beans:bean id="customAuthenticationFilter"
	    class="javaz.spring.security.filter.CustomAuthenticationFilter">
	    <beans:property name="filterProcessesUrl" value="/admin/j_spring_security_check"/>
	    <beans:property name="authenticationManager" ref="authenticationManager"/>
	    <beans:property name="authenticationSuccessHandler" ref="loginSuccessHandler"/>
	    <beans:property name="authenticationFailureHandler">
	        <beans:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
	            <beans:property name="defaultFailureUrl" value="/admin/accessDenied"/>       
	        </beans:bean>
	    </beans:property>
	</beans:bean>
	
    <beans:bean id="loginSuccessHandler" class="javaz.spring.security.handler.LoginSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/admin/loginSuccess"/>
        <beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
    </beans:bean>
	
</beans:beans>